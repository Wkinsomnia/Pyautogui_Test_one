import pyautogui as pgui
import pyperclip
import random
###import time
###import tkinter

###...###
foo_count=0
def txt_str():
    f = open("C:\\Users\\Administrator\\Desktop\\testtxt.txt","r")   #设置文件对象
    str1= (str(f.read())).replace(' ','').replace('\n','').replace('\u3000','').replace(':','。').replace('：','。').replace('?','。').replace('？','。').replace('；','。').replace(';','。').replace('!','。').replace('！','。')    #将txt文件的所有内容读入到字符串str中
    f.close()   #将文件关闭
    return str1
    
def wnyy_test_foo():
    global foo_count
    list1=txt_str().split('。')
    foo=list1[foo_count]
    foo_count+=1
    if foo_count==len(list1):
        foo_count=0
    return foo

'''
def win_set(func):

    win = tkinter.Tk() # 初始化界面Tk()
    win.title("窗口标题")    # 设置窗口标题
    #app.configure(bg="#00ff00")#修改窗体背景色
    #app.iconbitmap("test.ico")#修改窗体图标
    app.geometry("250x250+100+100")    # 设置窗口大小与左上锚点定位
    app.resizable(width = False, height = False) # 设置窗口是否可以变化长/宽，False不可变，True可变，默认为True
    frame=tkinter.Frame(win,width = 200,height = 200) 
    frame.bind("f1",func) #触发的函数
    frame.focus_set()  #必须获取焦点
    frame.pack()
    win.mainloop()
'''
###...###

def ckytj_start(x):
    pgui.PAUSE = x
    pgui.FAILSAFE = True           # 启用自动防故障功能
    width,height = pgui.size()     # 屏幕的宽度和高度
    pgui.position()                # 鼠标当前位置

def pause_start(x):##时间设置
    pgui.PAUSE = x
def pg_press(xy=(0,0),enter=0):
    
    for xy_i in xy:
        
        pgui.click(xy_i)
        if enter:
            pgui.press('enter')
def fist_set():

    pgui.click(840,265,clicks=2)
    pgui.press('enter')
    pgui.click(805,265)
    pgui.press('enter')
    
    
    for i in range(4):
        pause_start(0.5)
        pgui.click(770,265)
        pause_start(0.1)
        pgui.press('enter')
    
    pgui.click(520,265)
    pgui.press('enter')
    pgui.click(490,265)
    pgui.press('enter')
    
    print('时间、地址加载完成')
    
def impc():
    pgui.click(840,220)##打开串口
    pgui.press ('enter')
    im = pgui.screenshot()     # 获取屏幕快照
    print(im.getpixel((710,380)))          # (240,240,240)
    i=pgui.pixelMatchesColor(710,380,(240,240,240))
    
    if i == False:
        print(i,",信息已写")
    elif i == True :
        print(i,",正常运行")
    return i
    ##pgui.click(840,220)##关闭串口
def impqn():
    
    im = pgui.screenshot()     # 获取屏幕快照
    im.getpixel((800,470))           # (240,240,240)
    i=pgui.pixelMatchesColor(800,470,(255,255,255))
    if i == True:
        print(i,",处理异常")
    elif i == False :
        print(i,",正常运行")
    return i
def paste(foo):
    pyperclip.copy(foo)
    pgui.hotkey('ctrl', 'v')


def four_lines(j=4,c=0):##j: 选择输入 2 h \4 h  c:选择双行色 0红 1 绿
    
    foo =[u'车牌识别',u'减速慢行',u'一车一杆',u'车损自负']
    y=[340,374,407,440]
    def xx_input(y,foo,c):
        color=[605,615,620]
    
        pgui.click(447,y)##
        pgui.click(850,515)##进入特效
        if csrtx == 1 :
            pgui.click(850,565)##选择从右入特效
        else :
            pgui.click(850,545)##选择从右入特效
        pgui.click(850,590)##字体颜色
        pgui.click(850,color[c])##选择红色
        pgui.click(828,660)##显示内容460
        pgui.mouseDown(828,660, button='left')
        pgui.mouseUp(460,660, button='left',duration=1)
        paste(foo)
    
    if c==0:
        for i in range(j):
            xx_input(y[i],foo[i],c)
            print('单色第',i+1,'行信息填写完成',c)
    elif c==1:
        c=0
        for i in range(j):
        ##填写文本—foo =[u'车牌识别',u'减速慢行',u'一车一杆',u'车损自负']
        ##y=[340,374,407,440]
            c=0
            i+=1
            if i!=0|i%2==0 :   
                c=1
            
            i-=1
            xx_input(y[i],foo[i],c)
            print('双色第',i+1,'行信息填写完成',c)
  
            
def p_initialization(j=6,c=0):##j=1时只进行屏幕测试
    y=[670,633,596,559,522,485,448]
    
    for i in range(j):
        ##初始化加载信息 
        pgui.click(950,y[i])##加载37
        if i==0 :
            pause_start(2.5)
            pgui.press('enter')
            if c==1 :
                pgui.press('enter')
        pause_start(0.15)
        pgui.press('enter')
        
    print('初始化、加载信息完成')

def pc_set(i , h = 64):##屏参设置
    ys = [388,400]
    pgui.click(950,448)
    
    if h == 64 :
        pgui.click(600,370)
        pgui.click(560,415)
    pgui.click(860,370)
    pgui.click(860,ys[i])
    pgui.click(900,420)
    pgui.press('enter')
    print('屏参设置完成')
    pgui.click(1000,620)##返回
    
def wnyy_test():
    
    pgui.click(950,448)
    pgui.mouseDown(910,550, button='left')
    pgui.mouseUp(420,500, button='left',duration=1)
    paste(wnyy_test_foo())
    pause_start(2)
    pgui.click(975,525,clicks = 2)
    pgui.press('enter')
    pause_start(0.1)
    pgui.click(1000,620)
def yy_test(wnyy_i = False):##语音测试
    if wnyy_i :
        
        wnyy_test ()
        
    else :
        pgui.click(940,220)
        pause_start(1)
        for i in range( 2 ):
            y = random.randrange(350,666,13)
            print(y)
            pgui.click(480,y,clicks = 2)
##支付宝  pgui.click(480,650,clicks = 3)
        
        pgui.click(940,220)
    pause_start(0.2)
    print('万能?',wnyy_i,',语音测试完成')
    
def win_test(i): ### i为全能串口window位置
    pause_start(0.2)
    pgui.keyDown('winleft')
    pgui.press(i)
    pgui.keyUp('winleft')
    
    print("('window','",i,"')切换完成")
    
def qn_jd_fist(): ## 全能串口测试
    pause_start( 0.1 )
    pgui.click( 870 , 400 )
    if impqn():
        pause_start( 0.2 )
        pgui.press('enter')
        pgui.click( 870 , 400 )
        pgui.press('enter')
        pgui.click( 870 , 400 ,clicks =2)
        
    pause_start( 0.2 )
    for i in range( 3 ):
        pgui.click( 530, 650, clicks = i)
    pgui.click(870,400)
    print('全能串口测试完成')

def qt_set( h = 64 ,i = 0 ) :## h:屏高设置32  64 i:颜色设置 0--388--单色  1--420--双色
    if h == 32 :
        j = 2
    elif h == 64 :
        j = 4 
    ##h&j  j:选择输入 2 h ,4 h
    
    print('h:',h,'i:',i,'j',j)
    '''
    pgui.doubleClick(255,40)
    '''
    pgui.click(840,220) ## 打开串口

    
    pgui.click(1015,340) ## 64*32
    if h == 64:
        pgui.click(1015,380)
    else :
        j = 2
    pgui.press('enter') ## 64*64

    four_lines(j,i) ## 调用four_lines(）选择输入 2 h ,4 h

    pause_start(0.3)
   
    ys=[388,400] ## 颜色设置 0--388--单色  1--420--双色
    pc_set(i,h)
    print('串口测试设置完成')
    pgui.click(840,220) ## 关闭串口
def ck_test(wnyy_i = False ,i = 0): ## 正常两行测试
    
    
    pgui.click(840,220) ## 打开串口


    fist_set() ## 时间地址设置

    p_initialization(6,i) ## 加载信息、初始化
    
    yy_test(wnyy_i) ## 语音测试
    pause_start(0.2)
    if csrtx:
        pc_set(i,h = 32)
    pgui.click(840,220) ## 关闭串口
    print('通用测试完成')

def ck_test_1(wnyy_i = False ,i = 0): ## 正常通用测试
    
    
    pgui.click(840,220) ## 打开串口

    

    fist_set() ## 时间地址设置

    p_initialization(6,i)##加载信息、初始化
    
    yy_test(wnyy_i)##语音测试
    pause_start(0.2)
    
    pgui.click(840,220)##关闭串口
    print('4行通用测试完成')

def sspc_test():##双色屏幕测试
    pgui.click(840,220)##打开串口
    p_initialization(j = 1)##j=1时只进行屏幕测试
    pause_start(1)
    pgui.press('enter')
    pgui.press('enter')
    pgui.press('enter')
    
    pgui.click(840,220)##关闭串口
def ty_test(wnyy_i = False ,h = 64,i = 0):
    ckytj_start(0.2)
    win_test('4') ## 切换串口窗口
    if impc():
        qt_set(h,i)
    ##通用测试；
    """
    环境：
    1.打开comm.exe，打开串口版显示一体机调试工具
    2.将comm.exe置(window,3)
    3.点击串口版显示一体机调试工具
    """
    ck_test(wnyy_i,i) ## 串口测试
    '''
    sspc_test()##双色屏幕测试aging
    '''
    win_test('3') ## 切换全能窗口
    qn_jd_fist() ## 全能串口测试
    
    win_test('5')
def scanf_exit(scanf_exit='.'):
    
    scantf=input("输入'点'重置H、I:")
    if scanf_exit in scantf :
        win_test('4')
        pgui.click(1030,220,clicks=2)
        win_test('4')
        return True
    else :
        print("未重置，程序正常运行")
        return False


##############......################
    ##########>>><<<############

if __name__ == '__main__':

    #pg_cl_pre(xy=(0,0),enter=0)
    #ckytj_start(0.2)
    #j=(840,220)
    #pgui.click(j)   
    ckytj_start(0.1)
    wnyy_i= 0 ## False(0) / True (1)选择万能语音
    csrtx= 0 ## False (0)/ True (1)选择竖入/右入特效
    h = 64 ## 32  /  64
    i =  0 ## 0 / 1
    count=0
    while True :
        if scanf_exit():
            win_test('5')
            try :
                h=int(input("H:"))
                i=int(input("I:"))
                wnyy_i=int(input("wnyy_i(0/1选择万能语音):"))
                csrtx=int(input("csrtx(0/1选择竖入):"))
            except:
                print("请重新输入")
                continue
            win_test('4')
        count+=1
        
        print("\n第",count,"测试\n",'h:',h,'i:',i)
        
        ty_test(wnyy_i,h,i)

    ##########>>><<<############
##############......################


'''

qt_set()##四行单色通用set

qt_set(h=32,i=0)##两行单色通用set

qt_set(h=32,i=1)##两行双色通用set

ty_test()##单色通用测试

ty_test(1)##双色通用测试




###...屏幕测试...###
ckytj_start(0.2)

while True:
    p_initialization(j=1)##j=1时只进行屏幕测试
    pause_start(1)
    pgui.press('enter')
    pgui.press('enter')
    pgui.press('enter')
    pgui.press('enter')
    pgui.press('enter')
'''

